openapi: 3.0.3
info:
  title: WaniKani
  description: "WaniKani: The API"
  version: "20170710.0"
servers:
  - url: https://api.wanikani.com/v2
security:
  - bearerAuth: []
paths:
  /assignments:
    get:
      operationId: getAssignments
      summary: Get All Assignments
      description: Returns a collection of all assignments, ordered by ascending created_at, 500 at a time.
      tags: [Assignment]
      parameters:
        - in: query
          name: available_after
          description: Only assignments available at or after this time are returned.
          schema:
            type: string
            format: date-time
        - in: query
          name: available_before
          description: Only assignments available at or before this time are returned.
          schema:
            type: string
            format: date-time
        - in: query
          name: burned
          description: When set to true, returns assignments that have a value in data.burned_at. Returns assignments with a null data.burned_at if false.
          schema:
            type: boolean
        - in: query
          name: hidden
          description: Return assignments with a matching value in the hidden attribute
          schema:
            type: boolean
        - in: query
          name: ids
          description: Only assignments where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: immediately_available_for_lessons
          description: Returns assignments which are immediately available for lessons
          schema:
            type: boolean
        - in: query
          name: immediately_available_for_review
          description: Returns assignments which are immediately available for review
          schema:
            type: boolean
        - in: query
          name: in_review
          description: Returns assignments which are in the review state
          schema:
            type: boolean
        - in: query
          name: levels
          description: Only assignments where the associated subject level matches one of the array values are returned. Valid values range from 1 to 60.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: srs_stages
          description: Only assignments where data.srs_stage matches one of the array values are returned. Valid values range from 0 to 9
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: started
          description: When set to true, returns assignments that have a value in data.started_at. Returns assignments with a null data.started_at if false.
          schema:
            type: boolean
        - in: query
          name: subject_ids
          description: Only assignments where data.subject_id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: subject_types
          description: 'Only assignments where data.subject_type matches one of the array values are returned. Valid values are: radical, kanji, or vocabulary.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectType'
        - in: query
          name: unlocked
          description: When set to true, returns assignments that have a value in data.unlocked_at. Returns assignments with a null data.unlocked_at if false.
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Only assignments updated after this time are returned.
          schema:
            type: string
            format: date-time

      responses:
        '200':
          description: All Assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignments'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/assignments",
                "pages": {
                  "per_page": 500,
                  "next_url": "https://api.wanikani.com/v2/assignments?page_after_id=80469434",
                  "previous_url": null
                },
                "total_count": 1600,
                "data_updated_at": "2017-11-29T19:37:03.571377Z",
                "data": [
                  {
                    "id": 80463006,
                    "object": "assignment",
                    "url": "https://api.wanikani.com/v2/assignments/80463006",
                    "data_updated_at": "2017-10-30T01:51:10.438432Z",
                    "data": {
                      "created_at": "2017-09-05T23:38:10.695133Z",
                      "subject_id": 8761,
                      "subject_type": "radical",
                      "srs_stage": 8,
                      "unlocked_at": "2017-09-05T23:38:10.695133Z",
                      "started_at": "2017-09-05T23:41:28.980679Z",
                      "passed_at": "2017-09-07T17:14:14.491889Z",
                      "burned_at": null,
                      "available_at": "2018-02-27T00:00:00.000000Z",
                      "resurrected_at": null
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /assignments/{id}:
    get:
      operationId: getAssignment
      summary: Get a Specific Assignment
      description: Retrieves a specific assignment by its id.
      tags: [Assignment]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
              example: {
                "id": 80463006,
                "object": "assignment",
                "url": "https://api.wanikani.com/v2/assignments/80463006",
                "data_updated_at": "2017-11-29T19:37:03.571377Z",
                "data": {
                  "created_at": "2017-09-05T23:38:10.695133Z",
                  "subject_id": 8761,
                  "subject_type": "radical",
                  "level": 1,
                  "srs_stage": 8,
                  "unlocked_at": "2017-09-05T23:38:10.695133Z",
                  "started_at": "2017-09-05T23:41:28.980679Z",
                  "passed_at": "2017-09-07T17:14:14.491889Z",
                  "burned_at": null,
                  "available_at": "2018-02-27T00:00:00.000000Z",
                  "resurrected_at": null
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /assignments/{id}/start:
    put:
      operationId: startAssignment
      summary: Start an Assignment
      description: Mark the assignment as started, moving the assignment from the lessons queue to the review queue. Returns the updated assignment.
      tags: [Assignment]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAssignmentRequest'
            example: {
              "started_at": "2017-09-05T23:41:28.980679Z"
            }
      responses:
        '200':
          description: The started Assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
              example: {
                "id": 80463006,
                "object": "assignment",
                "url": "https://api.wanikani.com/v2/assignments/80463006",
                "data_updated_at": "2017-11-29T19:37:03.571377Z",
                "data": {
                  "created_at": "2017-09-05T23:38:10.695133Z",
                  "subject_id": 8761,
                  "subject_type": "radical",
                  "level": 1,
                  "srs_stage": 8,
                  "unlocked_at": "2017-09-05T23:38:10.695133Z",
                  "started_at": "2017-09-05T23:41:28.980679Z",
                  "passed_at": "2017-09-07T17:14:14.491889Z",
                  "burned_at": null,
                  "available_at": "2018-02-27T00:00:00.000000Z",
                  "resurrected_at": null
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /level_progressions:
    get:
      operationId: getLevelProgressions
      summary: Get All Level Progressions
      description: Returns a collection of all level progressions, ordered by ascending created_at, 500 at a time.
      tags: [Level Progression]
      parameters:
        - in: query
          name: ids
          description: Only level progressions where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: updated_after
          description: Only level_progressions updated after this time are returned.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: All Level Progressions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelProgressions'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/level_progressions",
                "pages": {
                  "per_page": 500,
                  "next_url": null,
                  "previous_url": null
                },
                "total_count": 42,
                "data_updated_at": "2017-09-21T11:45:01.691388Z",
                "data": [
                  {
                    "id": 49392,
                    "object": "level_progression",
                    "url": "https://api.wanikani.com/v2/level_progressions/49392",
                    "data_updated_at": "2017-03-30T11:31:20.438432Z",
                    "data": {
                      "created_at": "2017-03-30T08:21:51.439918Z",
                      "level": 42,
                      "unlocked_at": "2017-03-30T08:21:51.439918Z",
                      "started_at": "2017-03-30T11:31:20.438432Z",
                      "passed_at": null,
                      "completed_at": null,
                      "abandoned_at": null
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /level_progressions/{id}:
    get:
      operationId: getLevelProgression
      summary: Get a Specific Level Progression
      description: Retrieves a specific level progression by its id.
      tags: [Level Progression]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Level Progression
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelProgression'
              example: {
                "id": 49392,
                "object": "level_progression",
                "url": "https://api.wanikani.com/v2/level_progressions/49392",
                "data_updated_at": "2017-03-30T11:31:20.438432Z",
                "data": {
                  "created_at": "2017-03-30T08:21:51.439918Z",
                  "level": 42,
                  "unlocked_at": "2017-03-30T08:21:51.439918Z",
                  "started_at": "2017-03-30T11:31:20.438432Z",
                  "passed_at": null,
                  "completed_at": null,
                  "abandoned_at": null
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /resets:
    get:
      operationId: getResets
      summary: Get All Resets
      description: Returns a collection of all resets, ordered by ascending created_at, 500 at a time.
      tags: [Reset]
      parameters:
        - in: query
          name: ids
          description: Only resets where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          description: Only resets updated after this time are returned.
          name: updated_after
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: All Resets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resets'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/resets",
                "pages": {
                  "per_page": 500,
                  "next_url": null,
                  "previous_url": null
                },
                "total_count": 2,
                "data_updated_at": "2017-11-29T19:37:03.571377Z",
                "data": [
                  {
                    "id": 234,
                    "object": "reset",
                    "url": "https://api.wanikani.com/v2/resets/80463006",
                    "data_updated_at": "2017-12-20T00:24:47.048380Z",
                    "data": {
                      "created_at": "2017-12-20T00:03:56.642838Z",
                      "original_level": 42,
                      "target_level": 8,
                      "confirmed_at": "2017-12-19T23:31:18.077268Z"
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /resets/{id}:
    get:
      operationId: getReset
      summary: Get a Specific Reset
      description: Retrieves a specific reset by its id.
      tags: [Reset]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reset'
              example: {
                "id": 234,
                "object": "reset",
                "url": "https://api.wanikani.com/v2/resets/234",
                "data_updated_at": "2017-03-30T11:31:20.438432Z",
                "data": {
                  "created_at": "2017-12-20T00:03:56.642838Z",
                  "original_level": 42,
                  "target_level": 8,
                  "confirmed_at": "2017-12-19T23:31:18.077268Z"
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /reviews:
    get:
      operationId: getReviews
      summary: Get All Reviews
      description: Returns a collection of all reviews, ordered by ascending created_at, 500 at a time.
      tags: [Review]
      parameters:
        - in: query
          name: ids
          description: Only reviews where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          description: Only reviews updated after this time are returned.
          name: updated_after
          schema:
            type: string
            format: date-time
        - in: query
          name: assignment_ids
          description: Only reviews where data.assignment_id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: subject_ids
          description: Only reviews where data.subject_id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: All Reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reviews'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/reviews",
                "pages": {
                  "per_page": 1000,
                  "next_url": "https://api.wanikani.com/v2/reviews?page_after_id=534345",
                  "previous_url": null
                },
                "total_count": 19201,
                "data_updated_at": "2017-12-20T01:10:17.578705Z",
                "data": [
                  {
                    "id": 534342,
                    "object": "review",
                    "url": "https://api.wanikani.com/v2/reviews/534342",
                    "data_updated_at": "2017-12-20T01:00:59.255427Z",
                    "data": {
                      "created_at": "2017-12-20T01:00:59.255427Z",
                      "assignment_id": 32132,
                      "spaced_repetition_system_id": 1,
                      "subject_id": 8,
                      "starting_srs_stage": 4,
                      "ending_srs_stage": 2,
                      "incorrect_meaning_answers": 1,
                      "incorrect_reading_answers": 0
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      operationId: createReview
      summary: Create a review
      description:
        "Creates a review for a specific assignment_id. Using the related subject_id is also a valid alternative to using assignment_id.
        
        
        Some criteria must be met in order for a review to be created: available_at must be not null and in the past.

        
        When a review is registered, the associated assignment and review_statistic are both updated. These are returned in the response body under resources_updated."
      tags: [Review]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequest'
            example: {
              "review": {
                "assignment_id": 1422,
                "incorrect_meaning_answers": 1,
                "incorrect_reading_answers": 2,
                "created_at": "2017-09-30T01:42:13.453291Z"
              }
            }
      responses:
        '200':
          description: The registered review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReviewResponse'
              example: {
                "id": 72,
                "object": "review",
                "url": "https://api.wanikani.com/v2/reviews/72",
                "data_updated_at": "2018-05-13T03:34:54.000000Z",
                "data": {
                  "created_at": "2018-05-13T03:34:54.000000Z",
                  "assignment_id": 1422,
                  "spaced_repetition_system_id": 1,
                  "subject_id": 997,
                  "starting_srs_stage": 1,
                  "ending_srs_stage": 1,
                  "incorrect_meaning_answers": 1,
                  "incorrect_reading_answers": 2
                },
                "resources_updated": {
                  "assignment": {
                    "id": 1422,
                    "object": "assignment",
                    "url": "https://api.wanikani.com/v2/assignments/1422",
                    "data_updated_at": "2018-05-14T03:35:34.180006Z",
                    "data": {
                      "created_at": "2018-01-24T21:32:38.967244Z",
                      "subject_id": 997,
                      "subject_type": "vocabulary",
                      "level": 2,
                      "srs_stage": 1,
                      "unlocked_at": "2018-01-24T21:32:39.888359Z",
                      "started_at": "2018-01-24T21:52:47.926376Z",
                      "passed_at": null,
                      "burned_at": null,
                      "available_at": "2018-05-14T07:00:00.000000Z",
                      "resurrected_at": null,
                      "passed": false,
                      "resurrected": false,
                      "hidden": false
                    }
                  },
                  "review_statistic": {
                    "id": 342,
                    "object": "review_statistic",
                    "url": "https://api.wanikani.com/v2/review_statistics/342",
                    "data_updated_at": "2018-05-14T03:35:34.223515Z",
                    "data": {
                      "created_at": "2018-01-24T21:35:55.127513Z",
                      "subject_id": 997,
                      "subject_type": "vocabulary",
                      "meaning_correct": 1,
                      "meaning_incorrect": 1,
                      "meaning_max_streak": 1,
                      "meaning_current_streak": 1,
                      "reading_correct": 1,
                      "reading_incorrect": 2,
                      "reading_max_streak": 1,
                      "reading_current_streak": 1,
                      "percentage_correct": 67,
                      "hidden": false
                    }
                  }
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /reviews/{id}:
    get:
      operationId: getReview
      summary: Get a Specific Review
      description: Retrieves a specific review by its id.
      tags: [Review]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
              example: {
                "id": 534342,
                "object": "review",
                "url": "https://api.wanikani.com/v2/reviews/80463006",
                "data_updated_at": "2017-12-20T01:00:59.255427Z",
                "data": {
                  "created_at": "2017-12-20T01:00:59.255427Z",
                  "assignment_id": 32132,
                  "spaced_repetition_system_id": 1,
                  "subject_id": 8,
                  "starting_srs_stage": 4,
                  "incorrect_meaning_answers": 1,
                  "incorrect_reading_answers": 0
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /review_statistics:
    get:
      operationId: getReviewStatistics
      summary: Get All Review Statistics
      description: Returns a collection of all review statistics, ordered by ascending created_at, 500 at a time.
      tags: [Review Statistics]
      parameters:
        - in: query
          name: ids
          description: Only reviews where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          description: Only reviews updated after this time are returned.
          name: updated_after
          schema:
            type: string
            format: date-time
        - in: query
          description: Return review statistics with a matching value in the hidden attribute
          name: hidden
          schema:
            type: boolean
        - in: query
          name: subject_ids
          description: Only reviews where data.subject_id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: subject_types
          description: 'Only review statistics where data.subject_type matches one of the array values are returned. Valid values are: radical, kanji, or vocabulary.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectType'
        - in: query
          name: percentages_greater_than
          description: Return review statistics where the percentage_correct is greater than the value.
          schema:
            type: integer
        - in: query
          name: percentages_less_than
          description: Return review statistics where the percentage_correct is less than the value.
          schema:
            type: integer
      responses:
        '200':
          description: All Review Statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatistics'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/review_statistics",
                "pages": {
                  "per_page": 500,
                  "next_url": "https://api.wanikani.com/v2/review_statistics?page_after_id=80461982",
                  "previous_url": null
                },
                "total_count": 980,
                "data_updated_at": "2018-04-06T14:43:14.337681Z",
                "data": [
                  {
                    "id": 80461982,
                    "object": "review_statistic",
                    "url": "https://api.wanikani.com/v2/review_statistics/80461982",
                    "data_updated_at": "2018-04-03T11:50:31.558505Z",
                    "data": {
                      "created_at": "2017-09-05T23:38:10.964821Z",
                      "subject_id": 8761,
                      "subject_type": "radical",
                      "meaning_correct": 8,
                      "meaning_incorrect": 0,
                      "meaning_max_streak": 8,
                      "meaning_current_streak": 8,
                      "reading_correct": 0,
                      "reading_incorrect": 0,
                      "reading_max_streak": 0,
                      "reading_current_streak": 0,
                      "percentage_correct": 100,
                      "hidden": false
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /review_statistics/{id}:
    get:
      operationId: getReviewStatistic
      summary: Get a Specific Review Statistic
      description: Retrieves a specific review statistic by its id.
      tags: [Review Statistics]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Review Statistic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatistic'
              example: {
                "id": 80461982,
                "object": "review_statistic",
                "url": "https://api.wanikani.com/v2/review_statistics/80461982",
                "data_updated_at": "2018-04-03T11:50:31.558505Z",
                "data": {
                  "created_at": "2017-09-05T23:38:10.964821Z",
                  "subject_id": 8761,
                  "subject_type": "radical",
                  "meaning_correct": 8,
                  "meaning_incorrect": 0,
                  "meaning_max_streak": 8,
                  "meaning_current_streak": 8,
                  "reading_correct": 0,
                  "reading_incorrect": 0,
                  "reading_max_streak": 0,
                  "reading_current_streak": 0,
                  "percentage_correct": 100,
                  "hidden": false
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /spaced_repetition_systems:
    get:
      operationId: getSpacedRepetitionSystems
      summary: Get All Spaced Repetition Systems
      description: Returns a collection of all spaced repetition systems, ordered by ascending created_at, 500 at a time.
      tags: [Spaced Repetition System]
      parameters:
        - in: query
          name: hidden
          description: Return study materials with a matching value in the hidden attribute
          schema:
            type: boolean
        - in: query
          name: ids
          description: Only study material records where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: updated_after
          description: Only study material records updated after this time are returned.
          schema:
            type: string
            format: date-time
        - in: query
          name: subject_ids
          description: Only study material records where data.subject_id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: subject_types
          description: 'Only study material records where data.subject_type matches one of the array values are returned. Valid values are: radical, kanji, or vocabulary.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectType'
      responses:
        '200':
          description: All Spaced Repetition Systems
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacedRepetitionSystems'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/spaced_repetition_systems",
                "pages": {
                  "per_page": 500,
                  "next_url": null,
                  "previous_url": null
                },
                "total_count": 2,
                "data_updated_at": "2020-06-09T03:38:01.007395Z",
                "data": [
                  {
                    "id": 1,
                    "object": "spaced_repetition_system",
                    "url": "https://api.wanikani.com/v2/spaced_repetition_systems/1",
                    "data_updated_at": "2020-06-09T03:36:51.134752Z",
                    "data": {
                      "created_at": "2020-05-21T20:46:06.464460Z",
                      "name": "Default system for dictionary subjects",
                      "description": "The original spaced repetition system",
                      "unlocking_stage_position": 0,
                      "starting_stage_position": 1,
                      "passing_stage_position": 5,
                      "burning_stage_position": 9,
                      "stages": [
                        {
                          "interval": null,
                          "position": 0,
                          "interval_unit": null
                        },
                        {
                          "interval": 14400,
                          "position": 1,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 28800,
                          "position": 2,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 82800,
                          "position": 3,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 169200,
                          "position": 4,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 601200,
                          "position": 5,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 1206000,
                          "position": 6,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 2588400,
                          "position": 7,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 10364400,
                          "position": 8,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": null,
                          "position": 9,
                          "interval_unit": null
                        }
                      ]
                    }
                  },
                  {
                    "id": 2,
                    "object": "spaced_repetition_system",
                    "url": "https://api.wanikani.com/v2/spaced_repetition_systems/2",
                    "data_updated_at": "2020-06-09T03:38:01.007395Z",
                    "data": {
                      "created_at": "2020-05-21T20:48:06.470578Z",
                      "name": "Default accelerated system for dictionary subjects",
                      "description": "The original spaced repetition system, but accelerated",
                      "unlocking_stage_position": 0,
                      "starting_stage_position": 1,
                      "passing_stage_position": 5,
                      "burning_stage_position": 9,
                      "stages": [
                        {
                          "interval": null,
                          "position": 0,
                          "interval_unit": null
                        },
                        {
                          "interval": 7200,
                          "position": 1,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 14400,
                          "position": 2,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 28800,
                          "position": 3,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 82800,
                          "position": 4,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 601200,
                          "position": 5,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 1206000,
                          "position": 6,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 2588400,
                          "position": 7,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": 10364400,
                          "position": 8,
                          "interval_unit": "seconds"
                        },
                        {
                          "interval": null,
                          "position": 9,
                          "interval_unit": null
                        }
                      ]
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /spaced_repetition_systems/{id}:
    get:
      operationId: getSpacedRepetitionSystem
      summary: Get a Specific Spaced Repetition System
      description: Retrieves a specific spaced repetition system by its id.
      tags: [Spaced Repetition System]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Spaced Repetition System
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacedRepetitionSystem'
              example: {
                "id": 1,
                "object": "spaced_repetition_system",
                "url": "https://api.wanikani.com/v2/spaced_repetition_systems/1",
                "data_updated_at": "2020-05-27T16:42:06.705681Z",
                "data": {
                  "created_at": "2020-05-21T20:46:06.464460Z",
                  "name": "Default system for dictionary subjects",
                  "description": "The original spaced repetition system",
                  "unlocking_stage_position": 0,
                  "starting_stage_position": 1,
                  "passing_stage_position": 5,
                  "burning_stage_position": 9,
                  "stages": [
                    {
                      "interval": null,
                      "position": 0,
                      "interval_unit": null
                    },
                    {
                      "interval": 14400,
                      "position": 1,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 28800,
                      "position": 2,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 82800,
                      "position": 3,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 169200,
                      "position": 4,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 601200,
                      "position": 5,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 1206000,
                      "position": 6,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 2588400,
                      "position": 7,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": 10364400,
                      "position": 8,
                      "interval_unit": "seconds"
                    },
                    {
                      "interval": null,
                      "position": 9,
                      "interval_unit": null
                    }
                  ]
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /study_materials:
    get:
      operationId: getStudyMaterials
      summary: Get All Study Materials
      description: Returns a collection of all study material, ordered by ascending created_at, 500 at a time.
      tags: [Study Material]
      parameters:
        - in: query
          name: ids
          description: Only spaced_repetition_systems where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: updated_after
          description: Only spaced_repetition_systems updated after this time are returned.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: All Study Materials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyMaterials'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/study_materials",
                "pages": {
                  "per_page": 500,
                  "next_url": "https://api.wanikani.com/v2/study_materials?page_after_id=52342",
                  "previous_url": null
                },
                "total_count": 88,
                "data_updated_at": "2017-12-21T22:42:11.468155Z",
                "data": [
                  {
                    "id": 65231,
                    "object": "study_material",
                    "url": "https://api.wanikani.com/v2/study_materials/65231",
                    "data_updated_at": "2017-09-30T01:42:13.453291Z",
                    "data": {
                      "created_at": "2017-09-30T01:42:13.453291Z",
                      "subject_id": 241,
                      "subject_type": "radical",
                      "meaning_note": "I like turtles",
                      "reading_note": "I like durtles",
                      "meaning_synonyms": [ "burn", "sizzle" ]
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /study_materials/{id}:
    get:
      operationId: getStudyMaterial
      summary: Get a Specific Study Material
      description: Retrieves a specific study material by its id.
      tags: [Study Material]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Study Material
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyMaterial'
              example: {
                "id": 65231,
                "object": "study_material",
                "url": "https://api.wanikani.com/v2/study_materials/65231",
                "data_updated_at": "2017-09-30T01:42:13.453291Z",
                "data": {
                  "created_at": "2017-09-30T01:42:13.453291Z",
                  "subject_id": 241,
                  "subject_type": "radical",
                  "meaning_note": "I like turtles",
                  "reading_note": "I like durtles",
                  "meaning_synonyms": [ "burn", "sizzle" ]
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /subjects:
    get:
      operationId: getSubjects
      summary: Get All Subjects
      description: Returns a collection of all subjects, ordered by ascending created_at, 500 at a time.
      tags: [Subject]
      parameters:
        - in: query
          name: ids
          description: Only subjects where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: types
          description: Return subjects of the specified types.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SubjectType'
        - in: query
          name: slugs
          description: Return subjects of the specified slug.
          schema:
            type: array
            items:
              type: string
        - in: query
          name: levels
          description: Return subjects at the specified levels.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: hidden
          description: Return subjects which are or are not hidden from the user-facing application.
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Only subjects updated after this time are returned.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: All Subjects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subjects'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/subjects?types=kanji",
                "pages": {
                  "per_page": 1000,
                  "next_url": "https://api.wanikani.com/v2/subjects?page_after_id=1439\u0026types=kanji",
                  "previous_url": null
                },
                "total_count": 2027,
                "data_updated_at": "2018-04-09T18:08:59.946969Z",
                "data": [
                  {
                    "id": 440,
                    "object": "kanji",
                    "url": "https://api.wanikani.com/v2/subjects/440",
                    "data_updated_at": "2018-03-29T23:14:30.805034Z",
                    "data": {
                      "created_at": "2012-02-27T19:55:19.000000Z",
                      "level": 1,
                      "slug": "一",
                      "hidden_at": null,
                      "document_url": "https://www.wanikani.com/kanji/%E4%B8%80",
                      "characters": "一",
                      "meanings": [
                        {
                          "meaning": "One",
                          "primary": true,
                          "accepted_answer": true
                        }
                      ],
                      "readings": [
                        {
                          "type": "onyomi",
                          "primary": true,
                          "accepted_answer": true,
                          "reading": "いち"
                        },
                        {
                          "type": "kunyomi",
                          "primary": false,
                          "accepted_answer": false,
                          "reading": "ひと"
                        },
                        {
                          "type": "nanori",
                          "primary": false,
                          "accepted_answer": false,
                          "reading": "かず"
                        }
                      ],
                      "component_subject_ids": [
                          1
                      ],
                      "amalgamation_subject_ids": [
                          56,
                          88,
                          91
                      ],
                      "visually_similar_subject_ids": [ ],
                      "meaning_mnemonic": "Lying on the <radical>ground</radical> is something that looks just like the ground, the number <kanji>One</kanji>. Why is this One lying down? It's been shot by the number two. It's lying there, bleeding out and dying. The number One doesn't have long to live.",
                      "meaning_hint": "To remember the meaning of <kanji>One</kanji>, imagine yourself there at the scene of the crime. You grab <kanji>One</kanji> in your arms, trying to prop it up, trying to hear its last words. Instead, it just splatters some blood on your face. \"Who did this to you?\" you ask. The number One points weakly, and you see number Two running off into an alleyway. He's always been jealous of number One and knows he can be number one now that he's taken the real number one out.",
                      "reading_mnemonic": "As you're sitting there next to <kanji>One</kanji>, holding him up, you start feeling a weird sensation all over your skin. From the wound comes a fine powder (obviously coming from the special bullet used to kill One) that causes the person it touches to get extremely <reading>itchy</reading> (いち)",
                      "reading_hint": "Make sure you feel the ridiculously <reading>itchy</reading> sensation covering your body. It climbs from your hands, where you're holding the number <kanji>One</kanji> up, and then goes through your arms, crawls up your neck, goes down your body, and then covers everything. It becomes uncontrollable, and you're scratching everywhere, writhing on the ground. It's so itchy that it's the most painful thing you've ever experienced (you should imagine this vividly, so you remember the reading of this kanji).",
                      "lesson_position": 2,
                      "spaced_repetition_system_id": 1
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /subjects/{id}:
    get:
      operationId: getSubject
      summary: Get a Specific Subject
      description: Retrieves a specific subject by its id. The structure of the response depends on the subject type. See the section on subject data structure for details.
      tags: [Subject]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Subject
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
              examples:
                Radical:
                  value: {
                    "id": 1,
                    "object": "radical",
                    "url": "https://api.wanikani.com/v2/subjects/1",
                    "data_updated_at": "2018-03-29T23:13:14.064836Z",
                    "data": {
                      "amalgamation_subject_ids": [
                          5,
                          4,
                          98
                      ],
                      "auxiliary_meanings": [
                        {
                          "meaning": "ground",
                          "type": "blacklist"
                        }
                      ],
                      "characters": "一",
                      "character_images": [
                        {
                          "url": "https://cdn.wanikani.com/images/legacy/576-subject-1-without-css-original.svg?1520987227",
                          "metadata": {
                            "inline_styles": false
                          },
                          "content_type": "image/svg+xml"
                        }
                      ],
                      "created_at": "2012-02-27T18:08:16.000000Z",
                      "document_url": "https://www.wanikani.com/radicals/ground",
                      "hidden_at": null,
                      "lesson_position": 1,
                      "level": 1,
                      "meanings": [
                        {
                          "meaning": "Ground",
                          "primary": true,
                          "accepted_answer": true
                        }
                      ],
                      "meaning_mnemonic": "This radical consists of a single, horizontal stroke. What's the biggest, single, horizontal stroke? That's the ground. Look at the <radical>ground</radical>, look at this radical, now look at the ground again. Kind of the same, right?",
                      "slug": "ground",
                      "spaced_repetition_system_id": 2
                    }
                  }
                Kanji:
                  value: {
                    "id": 440,
                    "object": "kanji",
                    "url": "https://api.wanikani.com/v2/subjects/440",
                    "data_updated_at": "2018-03-29T23:14:30.805034Z",
                    "data": {
                      "amalgamation_subject_ids": [
                          56,
                          88,
                          91
                      ],
                      "auxiliary_meanings": [
                        {
                          "meaning": "one",
                          "type": "blacklist"
                        },
                        {
                          "meaning": "flat",
                          "type": "whitelist"
                        }
                      ],
                      "characters": "一",
                      "component_subject_ids": [
                          1
                      ],
                      "created_at": "2012-02-27T19:55:19.000000Z",
                      "document_url": "https://www.wanikani.com/kanji/%E4%B8%80",
                      "hidden_at": null,
                      "lesson_position": 2,
                      "level": 1,
                      "meanings": [
                        {
                          "meaning": "One",
                          "primary": true,
                          "accepted_answer": true
                        }
                      ],
                      "meaning_hint": "To remember the meaning of <kanji>One</kanji>, imagine yourself there at the scene of the crime. You grab <kanji>One</kanji> in your arms, trying to prop it up, trying to hear its last words. Instead, it just splatters some blood on your face. \"Who did this to you?\" you ask. The number One points weakly, and you see number Two running off into an alleyway. He's always been jealous of number One and knows he can be number one now that he's taken the real number one out.",
                      "meaning_mnemonic": "Lying on the <radical>ground</radical> is something that looks just like the ground, the number <kanji>One</kanji>. Why is this One lying down? It's been shot by the number two. It's lying there, bleeding out and dying. The number One doesn't have long to live.",
                      "readings": [
                        {
                          "type": "onyomi",
                          "primary": true,
                          "accepted_answer": true,
                          "reading": "いち"
                        },
                        {
                          "type": "kunyomi",
                          "primary": false,
                          "accepted_answer": false,
                          "reading": "ひと"
                        },
                        {
                          "type": "nanori",
                          "primary": false,
                          "accepted_answer": false,
                          "reading": "かず"
                        }
                      ],
                      "reading_mnemonic": "As you're sitting there next to <kanji>One</kanji>, holding him up, you start feeling a weird sensation all over your skin. From the wound comes a fine powder (obviously coming from the special bullet used to kill One) that causes the person it touches to get extremely <reading>itchy</reading> (いち)",
                      "reading_hint": "Make sure you feel the ridiculously <reading>itchy</reading> sensation covering your body. It climbs from your hands, where you're holding the number <kanji>One</kanji> up, and then goes through your arms, crawls up your neck, goes down your body, and then covers everything. It becomes uncontrollable, and you're scratching everywhere, writhing on the ground. It's so itchy that it's the most painful thing you've ever experienced (you should imagine this vividly, so you remember the reading of this kanji).",
                      "slug": "一",
                      "visually_similar_subject_ids": [ ],
                      "spaced_repetition_system_id": 1
                    }
                  }
                Vocabulary:
                  value: {
                    "id": 2467,
                    "object": "vocabulary",
                    "url": "https://api.wanikani.com/v2/subjects/2467",
                    "data_updated_at": "2018-12-12T23:09:52.234049Z",
                    "data": {
                      "auxiliary_meanings": [
                        {
                          "type": "whitelist",
                          "meaning": "1"
                        }
                      ],
                      "characters": "一",
                      "component_subject_ids": [
                          440
                      ],
                      "context_sentences": [
                        {
                          "en": "Let’s meet up once.",
                          "ja": "一ど、あいましょう。"
                        },
                        {
                          "en": "First place was an American.",
                          "ja": "一いはアメリカ人でした。"
                        },
                        {
                          "en": "I’m the weakest man in the world.",
                          "ja": "ぼくはせかいで一ばんよわい。"
                        }
                      ],
                      "created_at": "2012-02-28T08:04:47.000000Z",
                      "document_url": "https://www.wanikani.com/vocabulary/%E4%B8%80",
                      "hidden_at": null,
                      "lesson_position": 44,
                      "level": 1,
                      "meanings": [
                        {
                          "meaning": "One",
                          "primary": true,
                          "accepted_answer": true
                        }
                      ],
                      "meaning_mnemonic": "As is the case with most vocab words that consist of a single kanji, this vocab word has the same meaning as the kanji it parallels, which is \u003cvocabulary\u003eone\u003c/vocabulary\u003e.",
                      "parts_of_speech": [
                          "numeral"
                      ],
                      "pronunciation_audios": [
                        {
                          "url": "https://cdn.wanikani.com/audios/3020-subject-2467.mp3?1547862356",
                          "metadata": {
                            "gender": "male",
                            "source_id": 2711,
                            "pronunciation": "いち",
                            "voice_actor_id": 2,
                            "voice_actor_name": "Kenichi",
                            "voice_description": "Tokyo accent"
                          },
                          "content_type": "audio/mpeg"
                        },
                        {
                          "url": "https://cdn.wanikani.com/audios/3018-subject-2467.ogg?1547862356",
                          "metadata": {
                            "gender": "male",
                            "source_id": 2711,
                            "pronunciation": "いち",
                            "voice_actor_id": 2,
                            "voice_actor_name": "Kenichi",
                            "voice_description": "Tokyo accent"
                          },
                          "content_type": "audio/ogg"
                        }
                      ],
                      "readings": [
                        {
                          "primary": true,
                          "reading": "いち",
                          "accepted_answer": true
                        }
                      ],
                      "reading_mnemonic": "When a vocab word is all alone and has no okurigana (hiragana attached to kanji) connected to it, it usually uses the kun'yomi reading. Numbers are an exception, however. When a number is all alone, with no kanji or okurigana, it is going to be the on'yomi reading, which you learned with the kanji.  Just remember this exception for alone numbers and you'll be able to read future number-related vocab to come.",
                      "slug": "一",
                      "spaced_repetition_system_id": 1
                    }
                  }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /summary:
    get:
      operationId: getSummary
      summary: Get a Summary
      description: Retrieves a summary report.
      tags: [Summary]
      responses:
        '200':
          description: Summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
              example: {
                "object": "report",
                "url": "https://api.wanikani.com/v2/summary",
                "data_updated_at": "2018-04-11T21:00:00.000000Z",
                "data": {
                  "lessons": [
                    {
                      "available_at": "2018-04-11T21:00:00.000000Z",
                      "subject_ids": [
                          25,
                          26
                      ]
                    }
                  ],
                  "next_reviews_at": "2018-04-11T21:00:00.000000Z",
                  "reviews": [
                    {
                      "available_at": "2018-04-11T21:00:00.000000Z",
                      "subject_ids": [
                          21,
                          23,
                          24
                      ]
                    },
                    {
                      "available_at": "2018-04-11T22:00:00.000000Z",
                      "subject_ids": [ ]
                    }
                  ]
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /user:
    get:
      operationId: getUser
      summary: Get User Information
      description: Returns a summary of user information.
      tags: [User]
      responses:
        '200':
          description: Requested User Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example: {
                "object": "user",
                "url": "https://api.wanikani.com/v2/user",
                "data_updated_at": "2018-04-06T14:26:53.022245Z",
                "data": {
                  "id": "5a6a5234-a392-4a87-8f3f-33342afe8a42",
                  "username": "example_user",
                  "level": 5,
                  "profile_url": "https://www.wanikani.com/users/example_user",
                  "started_at": "2012-05-11T00:52:18.958466Z",
                  "current_vacation_started_at": null,
                  "subscription": {
                    "active": true,
                    "type": "recurring",
                    "max_level_granted": 60,
                    "period_ends_at": "2018-12-11T13:32:19.485748Z"
                  },
                  "preferences": {
                    "default_voice_actor_id": 1,
                    "lessons_autoplay_audio": false,
                    "lessons_batch_size": 5,
                    "lessons_presentation_order": "ascending_level_then_subject",
                    "reviews_autoplay_audio": false,
                    "reviews_display_srs_indicator": true
                  }
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /voice_actors:
    get:
      operationId: getVoiceActors
      summary: Get All Voice Actors
      description: Returns a collection of all voice actors, ordered by ascending created_at, 500 at a time.
      tags: [Voice Actor]
      parameters:
        - in: query
          name: ids
          description: Only voice_actors where data.id matches one of the array values are returned.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: updated_after
          description: Only voice_actors updated after this time are returned.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: All Voice Actors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceActors'
              example: {
                "object": "collection",
                "url": "https://api.wanikani.com/v2/voice_actors",
                "pages": {
                  "per_page": 500,
                  "next_url": null,
                  "previous_url": null
                },
                "total_count": 2,
                "data_updated_at": "2017-11-29T19:37:03.571377Z",
                "data": [
                  {
                    "id": 234,
                    "object": "voice_actor",
                    "url": "https://api.wanikani.com/v2/voice_actors/1",
                    "data_updated_at": "2017-12-20T00:24:47.048380Z",
                    "data": {
                      "created_at": "2017-12-20T00:03:56.642838Z",
                      "name": "Kyoko",
                      "gender": "female",
                      "description": "Tokyo accent"
                    }
                  }
                ]
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /voice_actors/{id}:
    get:
      operationId: getVoiceActor
      summary: Get a Specific Voice Actor
      description: Retrieves a specific voice actor by its id.
      tags: [Voice Actor]
      parameters:
        - $ref: "#/components/parameters/resourceId"
      responses:
        '200':
          description: Requested Voice Actor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceActor'
              example: {
                "id": 234,
                "object": "voice_actor",
                "url": "https://api.wanikani.com/v2/voice_actors/1",
                "data_updated_at": "2017-12-20T00:24:47.048380Z",
                "data": {
                  "created_at": "2017-12-20T00:03:56.642838Z",
                  "name": "Kyoko",
                  "gender": "female",
                  "description": "Tokyo accent"
                }
              }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Resource not found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseError'
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseError'
  schemas:
    BaseError:
      type: object
      required: [error, code]
      description: Errors with a message will return with the follow response body structure
      properties:
        error:
          type: string
        code:
          type: integer
    BaseResource:
      type: object
      required: [id, object, url, data_updated_at]
      properties:
        id:
          type: integer
        object:
          $ref: '#/components/schemas/ResourceObjectType'
        url:
          type: string
        data_updated_at:
          type: string
          format: date-time
    ResourceObjectType:
      type: string
      enum: [ assignment, kanji, level_progression, radical, reset, review_statistic, review, spaced_repetition_system, study_material, user, vocabulary ]
    CollectionObjectType:
      type: string
      enum: [ collection, report ]
    BaseCollection:
      type: object
      required: [object, url, pages, total_count, data_updated_at]
      properties:
        object:
          $ref: '#/components/schemas/CollectionObjectType'
        url:
          type: string
        pages:
          type: object
          required: [next_url, previous_url, per_page]
          properties:
            next_url:
              type: string
              nullable: true
            previous_url:
              type: string
              nullable: true
            per_page:
              type: integer
        total_count:
          type: integer
        data_updated_at:
          type: string
          format: date-time
    Assignment:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [created_at, hidden, srs_stage, subject_id, subject_type, available_at, burned_at, passed_at, resurrected_at, started_at, unlocked_at]
              properties:
                available_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the related subject will be available in the user's review queue.
                burned_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the user reaches SRS stage 9 the first time.
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the assignment was created.
                hidden:
                  type: boolean
                  description: Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
                passed_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the user reaches SRS stage 5 for the first time.
                resurrected_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the subject is resurrected and placed back in the user's review queue.
                srs_stage:
                  type: integer
                  description: Current SRS stage interval. The interval range is determined by the related subject's spaced repetition system.
                started_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the user completes the lesson for the related subject.
                subject_id:
                  type: integer
                  description: Unique identifier of the associated subject.
                subject_type:
                  $ref: '#/components/schemas/SubjectType'
                unlocked_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: The timestamp when the related subject has its prerequisites satisfied and is made available in lessons.
    Assignments:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Assignment'
    LevelProgression:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [created_at, level, abandoned_at, completed_at, passed_at, started_at, unlocked_at]
              properties:
                abandoned_at:
                  type: string
                  format: date-time
                  description: Timestamp when the user abandons the level. This is primary used when the user initiates a reset.
                  nullable: true
                completed_at:
                  type: string
                  format: date-time
                  description: Timestamp when the user burns 100% of the assignments belonging to the associated subject's level.
                  nullable: true
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the level progression is created
                level:
                  type: integer
                  description: The level of the progression, with possible values from 1 to 60.
                passed_at:
                  type: string
                  format: date-time
                  description: Timestamp when the user passes at least 90% of the assignments with a type of kanji belonging to the associated subject's level.
                  nullable: true
                started_at:
                  type: string
                  format: date-time
                  description: Timestamp when the user starts their first lesson of a subject belonging to the level.
                  nullable: true
                unlocked_at:
                  type: string
                  format: date-time
                  description: Timestamp when the user can access lessons and reviews for the level.
                  nullable: true
    LevelProgressions:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/LevelProgression'
    Reset:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [confirmed_at, created_at, original_level, target_level]
              properties:
                confirmed_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Timestamp when the user confirmed the reset.
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the reset was created.
                original_level:
                  type: integer
                  description: The user's level before the reset, from 1 to 60
                target_level:
                  type: integer
                  description: The user's level after the reset, from 1 to 60. It must be less than or equal to original_level.
    Resets:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Reset'
    Review:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [assignment_id, created_at, ending_srs_stage, incorrect_meaning_answers, incorrect_reading_answers, spaced_repetition_system_id, starting_srs_stage, subject_id]
              properties:
                assignment_id:
                    type: integer
                    description: Unique identifier of the associated assignment.
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the review was created.
                ending_srs_stage:
                    type: integer
                    description: The SRS stage interval calculated from the number of correct and incorrect answers, with valid values ranging from 1 to 9
                incorrect_meaning_answers:
                    type: integer
                    description: The number of times the user has answered the meaning incorrectly.
                incorrect_reading_answers:
                    type: integer
                    description: The number of times the user has answered the reading incorrectly.
                spaced_repetition_system_id:
                    type: integer
                    description: Unique identifier of the associated spaced_repetition_system.
                starting_srs_stage:
                    type: integer
                    description: The starting SRS stage interval, with valid values ranging from 1 to 8
                subject_id:
                    type: integer
                    description: Unique identifier of the associated subject.
    Reviews:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Review'
    StartAssignmentRequest:
      type: object
      properties:
        started_at:
          type: string
          format: date-time
    CreateReviewRequest:
      type: object
      properties:
        review:
          $ref: '#/components/schemas/CreateReview'
    CreateReviewResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data, resources_updated ]
          properties:
            data:
              $ref: '#/components/schemas/CreateReview'
            resources_updated:
              type: object
              required: [assignment, review_statistic]
              properties:
                assignment:
                  $ref: '#/components/schemas/Assignment'
                review_statistic:
                  $ref: '#/components/schemas/ReviewStatistic'
    CreateReview:
      type: object
      required: [assignment_id, incorrect_meaning_answers, incorrect_reading_answers, subject_id]
      properties:
        assignment_id:
          type: integer
          description: Unique identifier of the associated assignment.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the review was created.
        ending_srs_stage:
          type: integer
          description: The SRS stage interval calculated from the number of correct and incorrect answers, with valid values ranging from 1 to 9
        incorrect_meaning_answers:
          type: integer
          description: The number of times the user has answered the meaning incorrectly.
        incorrect_reading_answers:
          type: integer
          description: The number of times the user has answered the reading incorrectly.
        spaced_repetition_system_id:
          type: integer
          description: Unique identifier of the associated spaced_repetition_system.
        starting_srs_stage:
          type: integer
          description: The starting SRS stage interval, with valid values ranging from 1 to 8
        subject_id:
          type: integer
          description: Unique identifier of the associated subject.
    ReviewStatistic:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [created_at, hidden, meaning_correct, meaning_current_streak, meaning_incorrect, meaning_max_streak, percentage_correct, reading_correct, reading_current_streak, reading_incorrect, reading_max_streak, subject_id, subject_type]
              properties:
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the review statistic was created.
                hidden:
                  type: boolean
                  description: Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
                meaning_correct:
                  type: integer
                  description: Total number of correct answers submitted for the meaning of the associated subject.
                meaning_current_streak:
                  type: integer
                  description: The current, uninterrupted series of correct answers given for the meaning of the associated subject.
                meaning_incorrect:
                  type: integer
                  description: Total number of incorrect answers submitted for the meaning of the associated subject.
                meaning_max_streak:
                  type: integer
                  description: The longest, uninterrupted series of correct answers ever given for the meaning of the associated subject.
                percentage_correct:
                  type: integer
                  description: The overall correct answer rate by the user for the subject, including both meaning and reading.
                reading_correct:
                  type: integer
                  description: Total number of correct answers submitted for the reading of the associated subject.
                reading_current_streak:
                  type: integer
                  description: The current, uninterrupted series of correct answers given for the reading of the associated subject.
                reading_incorrect:
                  type: integer
                  description: Total number of incorrect answers submitted for the reading of the associated subject.
                reading_max_streak:
                  type: integer
                  description: The longest, uninterrupted series of correct answers ever given for the reading of the associated subject.
                subject_id:
                  type: integer
                  description: Unique identifier of the associated subject.
                subject_type:
                  $ref: '#/components/schemas/SubjectType'
    ReviewStatistics:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ReviewStatistic'
    StageAttributes:
      type: object
      required: [interval, interval_unit, position]
      properties:
        interval:
          type: integer
          description: The length of time added to the time of review registration, adjusted to the beginning of the hour.
          nullable: true
        interval_unit:
          type: string
          enum: [milliseconds, seconds, minutes, hours, days, weeks]
          description: 'Unit of time. Can be the following: milliseconds, seconds, minutes, hours, days, and weeks.'
          nullable: true
        position:
          type: integer
          description: The position of the stage within the continuous order.
    SpacedRepetitionSystem:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [burning_stage_position, created_at, description, name, passing_stage_position, stages, starting_stage_position, unlocking_stage_position]
              properties:
                burning_stage_position:
                  type: integer
                  description: position of the burning stage.
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the spaced_repetition_system was created.
                description:
                  type: string
                  description: Details about the spaced repetition system.
                name:
                  type: string
                  description: The name of the spaced repetition system
                passing_stage_position:
                  type: integer
                  description: position of the passing stage.
                stages:
                  type: array
                  items:
                    $ref: '#/components/schemas/StageAttributes'
                  description: A collection of stages. See table below for the object structure.
                starting_stage_position:
                  type: integer
                  description: position of the starting stage.
                unlocking_stage_position:
                  type: integer
                  description: position of the unlocking stage.
    SpacedRepetitionSystems:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SpacedRepetitionSystem'
    StudyMaterial:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [created_at, hidden, meaning_note, meaning_synonyms, reading_note, subject_id, subject_type]
              properties:
                created_at:
                  type: string
                  format: date-time
                  description: Timestamp when the study material was created.
                hidden:
                  type: boolean
                  description: Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
                meaning_note:
                  type: string
                  description: Free form note related to the meaning(s) of the associated subject.
                  nullable: true
                meaning_synonyms:
                  type: array
                  items:
                    type: string
                  description: Synonyms for the meaning of the subject. These are used as additional correct answers during reviews.
                reading_note:
                  type: string
                  description: Free form note related to the reading(s) of the associated subject.
                  nullable: true
                subject_id:
                  type: integer
                  description: Unique identifier of the associated subject.
                subject_type:
                  $ref: '#/components/schemas/SubjectType'
    StudyMaterials:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/StudyMaterial'
    AuxiliaryMeaning:
      type: object
      required: [meaning, type]
      properties:
        meaning:
          type: string
          description: A singular subject meaning.
        type:
          type: string
          description: Either whitelist or blacklist. When evaluating user input, whitelisted meanings are used to match for correctness. Blacklisted meanings are used to match for incorrectness.
    Meaning:
      type: object
      required: [meaning, primary, accepted_answer]
      properties:
        meaning:
          type: string
          description: A singular subject meaning.
        primary:
          type: boolean
          description: Indicates priority in the WaniKani system.
        accepted_answer:
          type: boolean
          description: Indicates if the meaning is used to evaluate user input for correctness.
    SubjectType:
      type: string
      description: 'The type of the associated subject, one of: kanji, radical, or vocabulary.'
      enum: [kanji, radical, vocabulary]
    CommonSubject:
      type: object
      required: [auxiliary_meanings, characters, created_at, document_url, hidden_at, lesson_position, level, meaning_mnemonic, meanings, slug, spaced_repetition_system_id]
      properties:
        auxiliary_meanings:
          type: array
          items:
            $ref: '#/components/schemas/AuxiliaryMeaning'
          description: Collection of auxiliary meanings. See table below for the object structure.
        characters:
          type: string
          description: The UTF-8 characters for the subject, including kanji and hiragana.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the subject was created.
        document_url:
          type: string
          description: A URL pointing to the page on wanikani.com that provides detailed information about this subject.
        hidden_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the subject was hidden, indicating associated assignments will no longer appear in lessons or reviews and that the subject page is no longer visible on wanikani.com.
        lesson_position:
          type: integer
          description: The position that the subject appears in lessons. Note that the value is scoped to the level of the subject, so there are duplicate values across levels.
        level:
          type: integer
          description: The level of the subject, from 1 to 60.
        meaning_mnemonic:
          type: string
          description: The subject's meaning mnemonic.
        meanings:
          type: array
          items:
            $ref: '#/components/schemas/Meaning'
          description: The subject meanings.
        slug:
          type: string
          description: The string that is used when generating the document URL for the subject. Radicals use their meaning, downcased. Kanji and vocabulary use their characters.
        spaced_repetition_system_id:
          type: integer
          description: Unique identifier of the associated spaced_repetition_system.
    RadicalSubject:
      allOf:
        - $ref: '#/components/schemas/CommonSubject'
        - type: object
          required: [amalgamation_subject_ids, characters, character_images]
          properties:
            amalgamation_subject_ids:
              type: array
              items:
                type: integer
              description: An array of numeric identifiers for the kanji that have the radical as a component.
            characters:
              type: string
              nullable: true
              description: Unlike kanji and vocabulary, radicals can have a null value for characters. Not all radicals have a UTF entry, so the radical must be visually represented with an image instead.
            character_images:
              type: array
              items:
                $ref: '#/components/schemas/RadicalCharacterImage'
              description: A collection of images of the radical. See table below for the object structure.
    KanjiSubject:
      allOf:
        - $ref: '#/components/schemas/CommonSubject'
        - type: object
          required: [amalgamation_subject_ids, component_subject_ids, meaning_hint, reading_hint, reading_mnemonic, readings, visually_similar_subject_ids]
          properties:
            amalgamation_subject_ids:
              type: array
              items:
                type: integer
              description: An array of numeric identifiers for the vocabulary that have the kanji as a component.
            component_subject_ids:
              type: array
              items:
                type: integer
              description: An array of numeric identifiers for the radicals that make up this kanji. Note that these are the subjects that must have passed assignments in order to unlock this subject's assignment.
            meaning_hint:
              type: string
              description: Meaning hint for the kanji.
              nullable: true
            reading_hint:
              type: string
              description: Reading hint for the kanji.
              nullable: true
            reading_mnemonic:
              type: string
              description: The kanji's reading mnemonic.
            readings:
              type: array
              items:
                $ref: '#/components/schemas/KanjiReading'
              description: Selected readings for the kanji. See table below for the object structure.
            visually_similar_subject_ids:
              type: array
              items:
                type: integer
              description: An array of numeric identifiers for kanji which are visually similar to the kanji in question.
    VocabSubject:
      allOf:
        - $ref: '#/components/schemas/CommonSubject'
        - type: object
          required: [component_subject_ids, context_sentences, meaning_mnemonic, parts_of_speech, pronunciation_audios, readings, reading_mnemonic]
          properties:
            component_subject_ids:
              type: array
              items:
                type: integer
              description: An array of numeric identifiers for the kanji that make up this vocabulary. Note that these are the subjects that must be have passed assignments in order to unlock this subject's assignment.
            context_sentences:
              type: array
              items:
                $ref: '#/components/schemas/ContextSentence'
              description: A collection of context sentences. See table below for the object structure.
            meaning_mnemonic:
              type: string
              description: The subject's meaning mnemonic.
            parts_of_speech:
              type: array
              items:
                type: string
              description: Parts of speech.
            pronunciation_audios:
              type: array
              items:
                $ref: '#/components/schemas/PronunciationAudio'
              description: A collection of pronunciation audio. See table below for the object structure.
            readings:
              type: array
              items:
                $ref: '#/components/schemas/VocabReading'
              description: Selected readings for the vocabulary. See table below for the object structure.
            reading_mnemonic:
              type: string
              description: The subject's reading mnemonic.
    ContextSentence:
      type: object
      required: [en, ja]
      properties:
        en:
          type: string
          description: English translation of the sentence
        ja:
          type: string
          description: Japanese context sentence
    PronunciationAudio:
      type: object
      required: [url, content_type, metadata]
      properties:
        url:
          type: string
          description: The location of the audio.
        content_type:
          type: string
          description: The content type of the audio. Currently the API delivers audio/mpeg and audio/ogg.
        metadata:
          type: object
          required: [gender, source_id, pronunciation, voice_actor_id, voice_actor_name, voice_description]
          description: Details about the pronunciation audio. See table below for details.
          properties:
            gender:
              type: string
              description: The gender of the voice actor.
            source_id:
              type: integer
              description: A unique ID shared between same source pronunciation audio.
            pronunciation:
              type: string
              description: Vocabulary being pronounced in kana.
            voice_actor_id:
              type: integer
              description: A unique ID belonging to the voice actor.
            voice_actor_name:
              type: string
              description: Humanized name of the voice actor.
            voice_description:
              type: string
              description: Description of the voice.
    BaseReading:
      type: object
      required: [reading, primary, accepted_answer]
      properties:
        reading:
          type: string
          description: A singular subject reading.
        primary:
          type: boolean
          description: Indicates priority in the WaniKani system.
        accepted_answer:
          type: boolean
          description: Indicates if the reading is used to evaluate user input for correctness.
    KanjiReading:
      allOf:
        - $ref: '#/components/schemas/BaseReading'
        - type: object
          required: [type]
          properties:
            type:
              type: string
              enum: [kunyomi, nanori, onyomi]
              description: "The kanji reading's classfication: kunyomi, nanori, or onyomi."
    VocabReading:
      $ref: '#/components/schemas/BaseReading'
    RadicalCharacterImage:
      type: object
      required: [url, content_type, metadata]
      properties:
        url:
          type: string
          description: The location of the image.
        content_type:
          type: string
          description: The content type of the image. Currently the API delivers image/png and image/svg+xml.
        metadata:
          description: Details about the image. Each content_type returns a uniquely structured object.
          oneOf:
            - $ref: '#/components/schemas/ImagePngMetadata'
            - $ref: '#/components/schemas/ImageSvgMetadata'
    ImageSvgMetadata:
      type: object
      required: [inline_styles]
      properties:
        inline_styles:
          type: boolean
          description: The SVG asset contains built-in CSS styling
    ImagePngMetadata:
      type: object
      required: [color, dimensions, style_name]
      properties:
        color:
          type: string
          description: Color of the asset in hexadecimal
        dimensions:
          type: string
          description: Dimension of the asset in pixels
        style_name:
          type: string
          description: A name descriptor
    Subject:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              oneOf:
                - $ref: '#/components/schemas/RadicalSubject'
                - $ref: '#/components/schemas/KanjiSubject'
                - $ref: '#/components/schemas/VocabSubject'
    Subjects:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Subject'
    VoiceActor:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [description, gender, name]
              properties:
                description:
                  type: string
                  description: Details about the voice actor.
                gender:
                  type: string
                  description: male or female
                name:
                  type: string
                  description: The voice actor's name
    VoiceActors:
      allOf:
        - $ref: '#/components/schemas/BaseCollection'
        - type: object
          required: [ data ]
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VoiceActor'
    UserPreferences:
      type: object
      description: User settings specific to the WaniKani application. See table below for the object structure.
      required: [default_voice_actor_id, lessons_autoplay_audio, lessons_batch_size, lessons_presentation_order, reviews_autoplay_audio, reviews_display_srs_indicator]
      properties:
        default_voice_actor_id:
          type: integer
          description: The voice actor to be used for lessons and reviews. The value is associated to subject.pronunciation_audios.metadata.voice_actor_id.
        lessons_autoplay_audio:
          type: boolean
          description: Automatically play pronunciation audio for vocabulary during lessons.
        lessons_batch_size:
          type: integer
          description: Number of subjects introduced to the user during lessons before quizzing.
        lessons_presentation_order:
          type: string
          enum: [ascending_level_then_subject, shuffled, ascending_level_then_shuffled]
          description: The order in which lessons are presented. The options are ascending_level_then_subject, shuffled, and ascending_level_then_shuffled. The default (and best experience) is ascending_level_then_subject.
        reviews_autoplay_audio:
          type: boolean
          description: Automatically play pronunciation audio for vocabulary during reviews.
        reviews_display_srs_indicator:
          type: boolean
          description: Toggle for display SRS change indicator after a subject has been completely answered during review.
    UserSubscription:
      type: object
      description: Details about the user's subscription state. See table below for the object structure.
      required: [active, max_level_granted, period_ends_at, type]
      properties:
        active:
          type: boolean
          description: Whether or not the user currently has a paid subscription.
        max_level_granted:
          type: integer
          description: The maximum level of content accessible to the user for lessons, reviews, and content review. For unsubscribed/free users, the maximum level is 3. For subscribed users, this is 60. Any application that uses data from the WaniKani API must respect these access limits.
        period_ends_at:
          type: string
          format: date-time
          nullable: true
          description: The date when the user's subscription period ends. If the user has subscription type lifetime or free then the value is null.
        type:
          type: string
          enum: [free, recurring, lifetime]
          description: 'The type of subscription the user has. Options are following: free, recurring, and lifetime.'
    User:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [current_vacation_started_at, level, preferences, profile_url, started_at, subscription, username]
              properties:
                current_vacation_started_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: If the user is on vacation, this will be the timestamp of when that vacation started. If the user is not on vacation, this is null.
                level:
                  type: integer
                  description: The current level of the user. This ignores subscription status.
                preferences:
                  $ref: '#/components/schemas/UserPreferences'
                profile_url:
                  type: string
                  description: The URL to the user's public facing profile page.
                started_at:
                  type: string
                  format: date-time
                  description: The signup date for the user.
                subscription:
                  $ref: '#/components/schemas/UserSubscription'
                username:
                  type: string
                  description: The user's username.
    SummaryLessons:
      required: [available_at, subject_ids]
      properties:
        available_at:
          type: string
          format: date-time
          description: When the paired subject_ids are available for lessons. Always beginning of the current hour when the API endpoint is accessed.
        subject_ids:
          type: array
          items:
            type: integer
          description: Collection of unique identifiers for subjects.
    SummaryReviews:
      required: [available_at, subject_ids]
      properties:
        available_at:
          type: string
          format: date-time
          description: When the paired subject_ids are available for reviews. All timestamps are the top of an hour.
        subject_ids:
          type: array
          items:
            type: integer
          description: Collection of unique identifiers for subjects.
    Summary:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          required: [ data ]
          properties:
            data:
              type: object
              required: [lessons, reviews, next_reviews_at]
              properties:
                lessons:
                  type: array
                  items:
                    $ref: '#/components/schemas/SummaryLessons'
                  description: Details about subjects available for lessons. See table below for object structure.
                next_reviews_at:
                  type: string
                  format: date-time
                  nullable: true
                  description: Earliest date when the reviews are available. Is null when the user has no reviews scheduled.
                reviews:
                  type: array
                  items:
                    $ref: '#/components/schemas/SummaryReviews'
                  description: Details about subjects available for reviews now and in the next 24 hours by the hour (total of 25 objects). See table below for object structure.

  parameters:
    resourceId:
      name: id
      in: path
      description: ID of the resource
      required: true
      schema:
        type: integer
